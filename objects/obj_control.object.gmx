<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initialize variables and creates the player list (empty at first)
global.dt = 0
global.playerlist = ds_list_create()

global.upbutton = false
global.downbutton = false
global.leftbutton = false
global.rightbutton = false

global.shiftbutton = false

global.switchkey = false
global.unswitchkey = false

global.targetting = false

global.actionbutton = false

global.attackone = false
global.attacktwo = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tells what buttons are pressed
if(keyboard_check_pressed(ord("V")))
{
    global.switchkey = true
}
if(!keyboard_check_pressed(ord("V")))
{
    global.switchkey = false
}
if(keyboard_check_pressed(ord("C")))
{
    show_debug_message("pressed")
    global.unswitchkey = true
}
if(!keyboard_check_pressed(ord("C")))
{
    global.unswitchkey = false
}

if(keyboard_check(vk_up))
{
    global.upbutton = true
}
if(!keyboard_check(vk_up))
{
    global.upbutton = false
}

if(keyboard_check(vk_down))
{
    global.downbutton = true
}
if(!keyboard_check(vk_down))
{
    global.downbutton = false
}

if(keyboard_check(vk_left))
{
    global.leftbutton = true
}
if(!keyboard_check(vk_left))
{
    global.leftbutton = false
}

if(keyboard_check(vk_right))
{
    global.rightbutton = true
}
if(!keyboard_check(vk_right))
{
    global.rightbutton = false
}

if(keyboard_check(vk_shift))
{
    global.shiftbutton = true
}
if(!keyboard_check(vk_shift))
{
    global.shiftbutton = false
}

if(keyboard_check_pressed(ord("Z")))
{
    global.actionbutton = true
}
if(!keyboard_check_pressed(ord("Z")))
{
    global.actionbutton = false
}


if(/*keyboard_check_pressed(ord("A"))*/ mouse_check_button_pressed(mb_left))
{
    global.attackone = true
}
if(/*!keyboard_check_pressed(ord("A"))*/!mouse_check_button_pressed(mb_left))
{
    global.attackone = false
}
if(keyboard_check_pressed(ord("S")))
{
    global.attacktwo = true
}
if(!keyboard_check_pressed(ord("S")))
{
    global.attacktwo = false
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//runs switch scripts
if(global.switchkey)
{
    show_debug_message("calling")
    scr_switch()
}
if(global.unswitchkey)
{
scr_unswitch()
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//checks the time between frames and changes all time based actions
//to be as if the game was running at 60 frames per second
//avoiding problems such as speed up and slowdown
frameratio = (60/1000000)

if(global.targetting)
{
global.dt = delta_time * frameratio / 4
}
else
{
global.dt = delta_time * frameratio
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
